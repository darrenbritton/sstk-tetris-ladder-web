{"version":3,"sources":["constants.js","actions/index.js","reducers/player-reducer.js","reducers/leaderboard-reducer.js","reducers/challenges-reducer.js","reducers/notifications-reducer.js","reducers/display-reducer.js","reducers/games-reducer.js","reducers/playing-reducer.js","reducers/index.js","store/index.js","components/enchanedTableHead.js","components/leaderboard.js","containers/home/index.js","containers/loggedOut/index.js","containers/challenges/index.js","containers/games/index.js","components/navBar.js","components/snackBar.js","components/playDialog.js","App.js","index.js"],"names":["constants","serverUrl","location","hostname","PERSIST_PLAYER","PERSIST_LEADERBOARD","PERSIST_CHALLENGES","PERSIST_GAMES","PERSIST_PLAYING","NOTIFY_GENERIC","NOTIFY_CLEAR","TOGGLE_PLAYER_DRAWER","TOGGLE_PLAY_DIALOG","DISPLAY_GAME_PROMPT","notify","generic","payload","dispatch","type","clear","player","challenge","primus","write","acceptChallenge","rejectChallenge","display","togglePlayerDrawer","togglePlayDialog","gamePrompt","game","initiate","reject","accept","win","lose","contest","confirm","persist","leaderboard","challenges","games","playing","state","action","received","sent","playerDrawer","breakDrawer","playDialog","pending","recent","waitingForPlayer","Object","keys","length","createRootReducer","history","combineReducers","router","connectRouter","leaderboardReducer","challengesReducer","gamesReducer","playerReducer","notifications","notificationsReducer","displayReducer","playingReducer","createBrowserHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","store","createStore","window","Primus","on","data","actionGroup","split","actions","call","this","EnhancedTableHead","createSortHandler","property","event","props","onRequestSort","order","orderBy","TableHead","TableRow","columns","map","column","TableCell","numeric","padding","sortDirection","id","sortable","Tooltip","title","placement","enterDelay","TableSortLabel","active","direction","onClick","label","React","Component","Root","styled","Flex","columnData","getSorting","a","b","Leaderboard","handleClick","setState","anchorEl","currentTarget","handleClose","opponent","handleRequestSort","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","target","value","flexDirection","m","mt","Paper","Table","rowCount","TableBody","sort","slice","p","Avatar","src","photo","username","rank","gamesPlayed","IconButton","aria-label","aria-owns","aria-haspopup","data-id","_id","Menu","open","Boolean","onClose","MenuItem","dataset","TablePagination","component","Box","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","connect","bindActionCreators","Home","Wrapper","div","ButtonIcon","img","TiltedBox","HeroText","LoggedOut","Button","href","variant","color","StyledPaper","StyledChip","Chip","StyledTypography","Typography","EmptyText","StyledButton","Challenges","gutterBottom","List","c","ListItem","challenger","ListItemText","primary","ListItemSecondaryAction","size","StyledAvatar","UserTitle","findPlayer","find","initiateGame","g","date","created_at","inProgress","winner","loser","Math","abs","Fab","pageLinks","icon","NavBar","toggleDrawer","drawer","pageListFragments","link","button","changePage","toLowerCase","ListItemIcon","AppBar","position","Toolbar","justifyContent","Drawer","anchor","tabIndex","role","onKeyDown","Divider","push","SnackBar","processQueue","queue","messageInfo","reason","handleAction","handleExited","nextProps","concat","notificationClear","classes","text","actionText","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onExited","ContentProps","message","className","close","withStyles","theme","width","spacing","unit","height","StyledSpinner","CircularProgress","StyledDialogContent","DialogContent","Transition","Slide","PlayDialog","won","lost","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContentText","DialogActions","waitingForConfirmationFrom","loggedInOnlyPaths","App","loggedIn","setTimeout","pathname","loggedOut","reload","exact","path","Games","prevState","includes","document","querySelector","render"],"mappings":"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","file":"static/js/main.5bfcdfda.chunk.js","sourcesContent":["const constants = {\n  serverUrl: (location.hostname === 'localhost' || location.hostname === '127.0.0.1') ? 'localhost:8080' : 'sstk-tetris-ladder.herokuapp.com'  // eslint-disable-line\r\n};\n\nexport default constants;\n","import { primus } from '../store';\n\nexport const PERSIST_PLAYER = 'persist-player';\nexport const PERSIST_LEADERBOARD = 'persist-leaderboard';\nexport const PERSIST_CHALLENGES = 'persist-challenges';\nexport const PERSIST_GAMES = 'persist-games';\nexport const PERSIST_PLAYING = 'persist-playing';\n\nexport const NOTIFY_GENERIC = 'notify-generic';\nexport const NOTIFY_CLEAR = 'notify-clear';\n\nexport const TOGGLE_PLAYER_DRAWER = 'toggle-player-drawer';\nexport const TOGGLE_PLAY_DIALOG = 'toggle-play-dialog';\nexport const DISPLAY_GAME_PROMPT = 'display-game-prompt';\n\nexport const PLAYER_CHALLENGE = 'player-challenge';\nexport const ACCEPT_CHALLENGE = 'accept-challenge';\nexport const REJECT_CHALLENGE = 'reject-challenge';\n\nexport const GAME_INITIATE = 'game-initiate';\nexport const GAME_REJECT = 'game-reject';\nexport const GAME_ACCEPT = 'game-accept';\nexport const GAME_WIN = 'game-win';\nexport const GAME_LOSE = 'game-lose';\nexport const GAME_CONTEST = 'game-contest';\nexport const GAME_CONFIRM = 'game-confirm';\n\nexport const persist = {\n  player: (payload) => (dispatch) => {\n    dispatch({\n      type: PERSIST_PLAYER,\n      payload,\n    });\n  },\n  leaderboard: (payload) => (dispatch) => {\n    dispatch({\n      type: PERSIST_LEADERBOARD,\n      payload,\n    });\n  },\n  challenges: (payload) => (dispatch) => {\n    dispatch({\n      type: PERSIST_CHALLENGES,\n      payload,\n    });\n  },\n  games: (payload) => (dispatch) => {\n    dispatch({\n      type: PERSIST_GAMES,\n      payload,\n    });\n  },\n  playing: (payload) => (dispatch) => {\n    dispatch({\n      type: PERSIST_PLAYING,\n      payload,\n    });\n  },\n};\n\nexport const notify = {\n  generic: (payload) => (dispatch) => {\n    dispatch({\n      type: NOTIFY_GENERIC,\n      payload,\n    });\n  },\n  clear: (payload) => (dispatch) => {\n    dispatch({\n      type: NOTIFY_CLEAR,\n      payload,\n    });\n  },\n};\n\nexport const player = {\n  challenge: (payload) => (dispatch) => {\n    primus.write({\n      type: 'player.challenge',\n      payload,\n    });\n    dispatch({\n      type: PLAYER_CHALLENGE,\n      payload,\n    });\n  },\n  acceptChallenge: (payload) => (dispatch) => {\n    primus.write({\n      type: 'challenge.accept',\n      payload,\n    });\n    dispatch({\n      type: ACCEPT_CHALLENGE,\n      payload,\n    });\n  },\n  rejectChallenge: (payload) => (dispatch) => {\n    primus.write({\n      type: 'challenge.reject',\n      payload,\n    });\n    dispatch({\n      type: REJECT_CHALLENGE,\n      payload,\n    });\n  },\n};\n\nexport const display = {\n  togglePlayerDrawer: () => (dispatch) => {\n    dispatch({\n      type: TOGGLE_PLAYER_DRAWER,\n      payload: {},\n    });\n  },\n  togglePlayDialog: () => (dispatch) => {\n    dispatch({\n      type: TOGGLE_PLAY_DIALOG,\n      payload: {},\n    });\n  },\n  gamePrompt: (payload) => (dispatch) => {\n    dispatch({\n      type: DISPLAY_GAME_PROMPT,\n      payload,\n    });\n  },\n};\n\nexport const game = {\n  initiate: (payload) => (dispatch) => {\n    primus.write({\n      type: 'game.initiate',\n      payload,\n    });\n    dispatch({\n      type: GAME_INITIATE,\n      payload,\n    });\n  },\n  reject: (payload) => (dispatch) => {\n    primus.write({\n      type: 'game.reject',\n      payload,\n    });\n    dispatch({\n      type: GAME_REJECT,\n      payload,\n    });\n  },\n  accept: (payload) => (dispatch) => {\n    primus.write({\n      type: 'game.accept',\n      payload,\n    });\n    dispatch({\n      type: GAME_ACCEPT,\n      payload,\n    });\n  },\n  win: (payload) => (dispatch) => {\n    primus.write({\n      type: 'game.win',\n      payload,\n    });\n    dispatch({\n      type: GAME_WIN,\n      payload,\n    });\n  },\n  lose: (payload) => (dispatch) => {\n    primus.write({\n      type: 'game.lose',\n      payload,\n    });\n    dispatch({\n      type: GAME_LOSE,\n      payload,\n    });\n  },\n  contest: (payload) => (dispatch) => {\n    primus.write({\n      type: 'game.contest',\n      payload,\n    });\n    dispatch({\n      type: GAME_CONTEST,\n      payload,\n    });\n  },\n  confirm: (payload) => (dispatch) => {\n    primus.write({\n      type: 'game.confirm',\n      payload,\n    });\n    dispatch({\n      type: GAME_CONFIRM,\n      payload,\n    });\n  },\n};\n\nexport default {\n  persist,\n  notify,\n  display,\n  player,\n  game,\n};\n","import { PERSIST_PLAYER } from '../actions';\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case PERSIST_PLAYER:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { PERSIST_LEADERBOARD } from '../actions';\n\nexport default function (state = [], action) {\n  switch (action.type) {\n    case PERSIST_LEADERBOARD:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { PERSIST_CHALLENGES } from '../actions';\n\nexport default function (state = { received: [], sent: [] }, action) {\n  switch (action.type) {\n    case PERSIST_CHALLENGES:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { NOTIFY_GENERIC, NOTIFY_CLEAR } from '../actions';\n\nexport default function (state = { generic: [] }, action) {\n  switch (action.type) {\n    case NOTIFY_GENERIC:\n      return {\n        ...state,\n        generic: [...state.generic, action.payload],\n      };\n    case NOTIFY_CLEAR:\n      return {\n        ...state,\n        generic: [],\n      };\n    default:\n      return state;\n  }\n}\n","import { TOGGLE_PLAYER_DRAWER, TOGGLE_PLAY_DIALOG, DISPLAY_GAME_PROMPT } from '../actions';\n\nexport default function (state = { playerDrawer: false, breakDrawer: false, playDialog: false }, action) {\n  switch (action.type) {\n    case TOGGLE_PLAYER_DRAWER:\n      return {\n        ...state,\n        playerDrawer: !state.playerDrawer,\n      };\n    case TOGGLE_PLAY_DIALOG:\n      return {\n        ...state,\n        playDialog: !state.playDialog,\n      };\n    case DISPLAY_GAME_PROMPT:\n      return {\n        ...state,\n        playDialog: true,\n      };\n    default:\n      return state;\n  }\n}\n","import { PERSIST_GAMES } from '../actions';\n\nexport default function (state = { pending: [], recent: [] }, action) {\n  switch (action.type) {\n    case PERSIST_GAMES:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { PERSIST_PLAYING, DISPLAY_GAME_PROMPT } from '../actions';\n\nexport default function (state = { waitingForPlayer: true }, action) {\n  switch (action.type) {\n    case PERSIST_PLAYING:\n      if (Object.keys(action.payload).length === 0) {\n        return { waitingForPlayer: true };\n      }\n      return action.payload;\n\n    case DISPLAY_GAME_PROMPT:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport playerReducer from './player-reducer';\nimport leaderboardReducer from './leaderboard-reducer';\nimport challengesReducer from './challenges-reducer';\nimport notificationsReducer from './notifications-reducer';\nimport displayReducer from './display-reducer';\nimport gamesReducer from './games-reducer';\nimport playingReducer from './playing-reducer';\n\nconst createRootReducer = (history) => combineReducers({\n  router: connectRouter(history),\n  leaderboard: leaderboardReducer,\n  challenges: challengesReducer,\n  games: gamesReducer,\n  player: playerReducer,\n  notifications: notificationsReducer,\n  display: displayReducer,\n  playing: playingReducer,\n});\nexport default createRootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { createBrowserHistory } from 'history';\nimport 'redux-devtools-extension';\n\nimport constants from '../constants';\n\nimport createRootReducer from '../reducers';\nimport actions from '../actions';\n\nexport const history = createBrowserHistory();\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [\n  thunk,\n  routerMiddleware(history),\n];\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers,\n);\n\nconst store = createStore(\n  createRootReducer(history), // root reducer with router state\n  initialState,\n  composedEnhancers,\n);\n\nexport const primus = new window.Primus(`//${constants.serverUrl}`);\nprimus.on('data', function primusData(data) {\n  if (data.action) {\n    const actionGroup = data.action.split('.');\n    if (actions[actionGroup[0]][actionGroup[1]]) {\n      store.dispatch(actions[actionGroup[0]][actionGroup[1]].call(this, data.payload || {}));\n    }\n  }\n});\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = (property) => (event) => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const { order, orderBy } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          {this.props.columns.map((column) => (\n            <TableCell\n              key={column.id}\n              numeric={column.numeric}\n              padding=\"dense\"\n              sortDirection={orderBy === column.id ? order : false}\n            >\n              { column.sortable\n                  && (\n                  <Tooltip\n                    title=\"Sort\"\n                    placement={column.numeric ? 'bottom-end' : 'bottom-start'}\n                    enterDelay={300}\n                  >\n                    <TableSortLabel\n                      active={orderBy === column.id}\n                      direction={order}\n                      onClick={this.createSortHandler(column.id)}\n                    >\n                      {column.label}\n                    </TableSortLabel>\n                  </Tooltip>\n                  )}\n              { !column.sortable ? column.label : ''}\n            </TableCell>\n          ), this)}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  columns: PropTypes.array.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\n\nimport { connect } from 'react-redux';\nimport { Flex, Box } from 'grid-styled';\nimport styled from 'styled-components';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport EnhancedTableHead from './enchanedTableHead';\n\nimport { player } from '../actions';\n\nconst Root = styled(Flex)`\n  width: 100%;\n  overflow-x: auto;\n  table {\n    display: table-caption !important;\n    th {\n      padding-right: 0.8vw !important;\n    }\n  }\n`;\n\nconst columnData = [\n  {\n    id: 'avatar', numeric: false, sortable: false, label: 'Avatar',\n  },\n  {\n    id: 'username', numeric: false, sortable: true, label: 'Username',\n  },\n  {\n    id: 'rank', numeric: true, sortable: true, label: 'Rank (Elo)',\n  },\n  {\n    id: 'gamesPlayed', numeric: true, sortable: true, label: 'Games Played',\n  },\n];\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => (b[orderBy] < a[orderBy] ? -1 : b[orderBy] === a[orderBy] ? 0 : 1)\n    : (a, b) => (a[orderBy] < b[orderBy] ? -1 : a[orderBy] === b[orderBy] ? 0 : 1);\n}\n\nclass Leaderboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      order: 'desc',\n      orderBy: 'rank',\n      page: 0,\n      rowsPerPage: 5,\n      anchorEl: null,\n    };\n  }\n\n  handleClick = (event) => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  challenge = (id) => {\n    this.handleClose();\n    this.props.challenge({ opponent: id });\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'desc';\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc';\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = (event) => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const {\n      order, orderBy, rowsPerPage, page,\n    } = this.state;\n\n    return (\n      <Root flexDirection=\"column\">\n        <Box m=\"auto\" mt=\"15vh\">\n          <Paper>\n            <Table>\n              <EnhancedTableHead\n                columns={columnData}\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={this.handleRequestSort}\n                rowCount={this.props.leaderboard.length}\n              />\n              <TableBody>\n                {this.props.leaderboard\n                  .sort(getSorting(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((p) => (\n                    <TableRow key={p._id}>\n                      <TableCell padding=\"dense\">\n                        <Avatar src={p.photo} />\n                      </TableCell>\n                      <TableCell padding=\"dense\">\n                        {p.username}\n                      </TableCell>\n                      <TableCell numeric padding=\"dense\">{p.rank}</TableCell>\n                      <TableCell numeric padding=\"dense\">{p.gamesPlayed}</TableCell>\n                      <TableCell padding=\"none\">\n                        <IconButton\n                          aria-label=\"More\"\n                          aria-owns={this.state.anchorEl ? 'long-menu' : null}\n                          aria-haspopup=\"true\"\n                          data-id={p._id}\n                          onClick={this.handleClick}\n                        >\n                          <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                          id=\"long-menu\"\n                          anchorEl={this.state.anchorEl}\n                          open={Boolean(this.state.anchorEl)}\n                          onClose={this.handleClose}\n                        >\n                          <MenuItem onClick={() => this.challenge(this.state.anchorEl.dataset.id)}>\n                            Challenge\n                          </MenuItem>\n                          <MenuItem onClick={this.handleClose}>\n                            View Stats\n                          </MenuItem>\n                        </Menu>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n            <TablePagination\n              component={Box}\n              count={this.props.leaderboard.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              backIconButtonProps={{\n                'aria-label': 'Previous Page',\n              }}\n              nextIconButtonProps={{\n                'aria-label': 'Next Page',\n              }}\n              onChangePage={this.handleChangePage}\n              onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            />\n          </Paper>\n        </Box>\n      </Root>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  leaderboard: state.leaderboard,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  challenge: player.challenge,\n}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Leaderboard);\n","import React, { Component } from 'react';\n\nimport Leaderboard from '../../components/leaderboard';\n\nclass Home extends Component {\n  render() {\n    return (\n      <Leaderboard />\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Flex, Box } from 'grid-styled';\n\nimport { Button } from '@material-ui/core';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  height: 100%;\n  background: url(\"/background.jpg\");\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst ButtonIcon = styled.img`\n  position: relative;\n  margin-left: 11px;\n  width: 18px;\n  height: 18px;\n`;\n\nconst TiltedBox = styled(Box)`\n    transform: rotate(-15deg);\n`;\n\nconst HeroText = styled.p`\n    font-family: 'Montserrat';\n    height: 3.5em;\n    font-size: 3em;\n    text-align: center;\n    color: #fff;\n    -webkit-text-stroke: 3px black;\n`;\n\nclass LoggedOut extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Flex flexDirection=\"column\">\n          <TiltedBox m=\"auto\" mt=\"25vh\">\n            <HeroText>\n              Shutterstock\n              <br />\n              Tetris\n            </HeroText>\n          </TiltedBox>\n          <Box m=\"auto\" mt=\"3vh\">\n            <Button href=\"/login\" variant=\"contained\" color=\"primary\">\n              Login With\n              {' '}\n              <ButtonIcon src=\"/googleLogo.svg\" />\n            </Button>\n          </Box>\n        </Flex>\n      </Wrapper>\n    );\n  }\n}\n\nexport default LoggedOut;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\n\nimport { connect } from 'react-redux';\nimport { Flex, Box } from 'grid-styled';\nimport styled from 'styled-components';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { player } from '../../actions';\n\nconst Root = styled(Flex)`\n    width: 100%;\n    overflow-x: auto;\n`;\n\nconst StyledPaper = styled(Paper)`\n  min-height: 40px;\n  min-width: 350px;\n`;\n\nconst StyledChip = styled(Chip)`\n  margin-right: 20px;\n`;\n\nconst StyledTypography = styled(Typography)`\n  color: #fff  !important;\n`;\n\nconst EmptyText = styled(Typography)`\n  text-align: center;\n  margin-top: 30px !important;\n  margin-bottom: 30px !important;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-right: 10px !important;\n`;\n\nclass Challenges extends Component {\n  acceptChallenge = (id) => {\n    this.props.acceptChallenge({ id });\n  };\n\n  rejectChallenge = (id) => {\n    this.props.rejectChallenge({ id });\n  };\n\n  render() {\n    return (\n      <Root flexDirection=\"column\">\n        <Box m=\"auto\" mt=\"15vh\">\n          <StyledTypography variant=\"display1\" gutterBottom>\n            Received\n          </StyledTypography>\n          <StyledPaper>\n            <List>\n              {this.props.challenges.received.map((c) => (\n                <ListItem key={c._id}>\n                  <Avatar src={c.challenger.photo} />\n                  <ListItemText primary={c.challenger.username} />\n                  <ListItemSecondaryAction>\n                    <StyledButton size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.acceptChallenge(c._id)}>\n                      Accept\n                    </StyledButton>\n                    <StyledButton size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => this.rejectChallenge(c._id)}>\n                      Reject\n                    </StyledButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n              {this.props.challenges.received.length === 0\n                && (\n                <EmptyText variant=\"body2\">\n                  You don't currently have any open challenges\n                </EmptyText>\n                )}\n            </List>\n          </StyledPaper>\n        </Box>\n        <Box m=\"auto\" mt=\"5vh\">\n          <StyledTypography variant=\"display1\" gutterBottom>\n            Sent\n          </StyledTypography>\n          <StyledPaper>\n            <List>\n              {this.props.challenges.sent.map((c) => (\n                <ListItem key={c._id}>\n                  <Avatar src={c.opponent.photo} />\n                  <ListItemText primary={c.opponent.username} />\n                  <ListItemSecondaryAction>\n                    <StyledChip label=\"Pending Response\" />\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n              {this.props.challenges.sent.length === 0\n                && (\n                <EmptyText variant=\"body2\">\n                  You haven't sent any challenges that are still pending\n                </EmptyText>\n                )}\n            </List>\n          </StyledPaper>\n        </Box>\n      </Root>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  challenges: state.challenges,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  challenge: player.challenge,\n  acceptChallenge: player.acceptChallenge,\n  rejectChallenge: player.rejectChallenge,\n}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Challenges);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\n\nimport { connect } from 'react-redux';\nimport { Flex, Box } from 'grid-styled';\nimport styled from 'styled-components';\nimport TimeAgo from 'react-timeago';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport { player, display, game } from '../../actions';\n\nconst Root = styled(Flex)`\n  width: 100%;\n  overflow-x: auto;\n`;\n\nconst StyledChip = styled(Chip)`\n  margin-right: 20px;\n`;\n\nconst StyledAvatar = styled(Avatar)`\n   display: inline-block !important;\n`;\n\nconst StyledTypography = styled(Typography)`\n  color: #fff  !important;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-right: 10px !important;\n`;\n\nconst UserTitle = styled.p`\n  display: inline-block;\n  vertical-align: bottom;\n  @media (min-width: 675px) {\n    margin-left: 10px;\n  }\n`;\n\nclass Leaderboard extends Component {\n  findPlayer = (id) => this.props.leaderboard.find((player) => id === player._id);\n\n  initiateGame = (id) => {\n    this.props.togglePlayDialog();\n    this.props.initiate({ id });\n  };\n\n  render() {\n    const { player, games } = this.props;\n    return (\n      <Root flexDirection=\"column\">\n        <Box m=\"auto\" mt=\"15vh\">\n          <StyledTypography variant=\"display1\" gutterBottom>\n            Pending\n          </StyledTypography>\n          <Paper>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"dense\">Challenger</TableCell>\n                  <TableCell padding=\"dense\">Opponent</TableCell>\n                  <TableCell padding=\"dense\">Accepted</TableCell>\n                  <TableCell padding=\"dense\">State</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {games.pending.map((g) => {\n                  const challenger = this.findPlayer(g.challenger);\n                  const opponent = this.findPlayer(g.opponent);\n                  return (\n                    <TableRow key={g._id}>\n                      <TableCell padding=\"dense\">\n                        <StyledAvatar src={challenger.photo} />\n                        <UserTitle>{challenger.username}</UserTitle>\n                      </TableCell>\n                      <TableCell padding=\"dense\">\n                        <StyledAvatar src={opponent.photo} />\n                        <UserTitle>{opponent.username}</UserTitle>\n                      </TableCell>\n                      <TableCell padding=\"dense\">\n                        <TimeAgo date={g.created_at} />\n                      </TableCell>\n                      <TableCell padding=\"dense\">\n                        {(challenger._id === player.id || opponent._id === player.id) && !g.inProgress\n                          ? (\n                            <StyledButton size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.initiateGame(g._id)}>\n                              Play\n                            </StyledButton>\n                          )\n                          : (challenger._id === player.id || opponent._id === player.id) && g.inProgress\n                            ? (\n                              <StyledButton size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => this.props.togglePlayDialog()}>\n                                Continue\n                              </StyledButton>\n                            )\n                            : g.inProgress\n                              ? <StyledChip label=\"In Progress\" />\n                              : <StyledChip label=\"Waiting For Players...\" />}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </Paper>\n        </Box>\n        <Box m=\"auto\" mt=\"15vh\">\n          <StyledTypography variant=\"display1\" gutterBottom>\n            Recent\n          </StyledTypography>\n          <Paper>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"dense\">Winner</TableCell>\n                  <TableCell padding=\"dense\">Loser</TableCell>\n                  <TableCell padding=\"dense\">Time</TableCell>\n                  <TableCell padding=\"dense\">Ranking Delta</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {games.recent.map((g) => {\n                  const winner = this.findPlayer(g.winner);\n                  const loser = this.findPlayer(g.winner === g.challenger ? g.opponent : g.challenger);\n                  return (\n                    <TableRow key={g._id}>\n                      <TableCell padding=\"dense\">\n                        <StyledAvatar src={winner.photo} />\n                        <UserTitle>{winner.username}</UserTitle>\n                      </TableCell>\n                      <TableCell padding=\"dense\">\n                        <StyledAvatar src={loser.photo} />\n                        <UserTitle>{loser.username}</UserTitle>\n                      </TableCell>\n                      <TableCell padding=\"dense\">\n                        <TimeAgo date={g.created_at} />\n                      </TableCell>\n                      <TableCell padding=\"dense\">\n                        {Math.abs(winner.rank - loser.rank)}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </Paper>\n        </Box>\n      </Root>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  games: state.games,\n  leaderboard: state.leaderboard,\n  player: state.player,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  challenge: player.challenge,\n  togglePlayDialog: display.togglePlayDialog,\n  initiate: game.initiate,\n}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Leaderboard);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Flex, Box } from 'grid-styled';\nimport { push } from 'connected-react-router';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport StarIcon from '@material-ui/icons/Stars';\nimport ChallengeIcon from '@material-ui/icons/ChatBubble';\nimport GameIcon from '@material-ui/icons/VideogameAsset';\nimport LogoutIcon from '@material-ui/icons/Lock';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { display } from '../actions';\n\nconst HeroText = styled.a`\n    font-family: 'Montserrat';\n    font-size: 2em;\n    color: #fff;\n    text-decoration: none;\n`;\n\nconst Fab = styled.div`\n  z-index: 100;\n  position: fixed;\n  bottom: 5vh;\n  right: 5vh;\n`;\n\nconst pageLinks = [{ label: 'Leaderboard', icon: (<StarIcon />) }, { label: 'Challenges', icon: (<ChallengeIcon />) }, { label: 'Games', icon: (<GameIcon />) }];\n\nclass NavBar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      drawer: false,\n    };\n  }\n\n  toggleDrawer = (open) => () => {\n    this.setState({\n      drawer: open,\n    });\n  };\n\n  pageListFragments = () => pageLinks.map((link) => (\n    <ListItem key={link.label} button onClick={() => this.props.changePage(link.label.toLowerCase())}>\n      <ListItemIcon>\n        {link.icon}\n      </ListItemIcon>\n      <ListItemText primary={link.label} />\n    </ListItem>\n  ));\n\n  render() {\n    return (\n      <Flex>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Flex justifyContent=\"space-between\">\n              <Box>\n                <HeroText href=\"/\">SSTK Tetris</HeroText>\n              </Box>\n            </Flex>\n          </Toolbar>\n        </AppBar>\n        <Fab>\n          <Button\n            variant=\"fab\"\n            color=\"primary\"\n            aria-label=\"More\"\n            aria-owns={this.state.anchorEl ? 'long-menu' : null}\n            aria-haspopup=\"true\"\n            onClick={this.toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </Button>\n          <Drawer\n            anchor=\"bottom\"\n            open={this.state.drawer}\n            onClose={this.toggleDrawer(false)}\n          >\n            <div\n              tabIndex={0}\n              role=\"button\"\n              onClick={this.toggleDrawer(false)}\n              onKeyDown={this.toggleDrawer(false)}\n            >\n              <List>\n                {this.pageListFragments()}\n              </List>\n              <Divider />\n              <List>\n                <ListItem button onClick={() => this.props.changePage('logout')}>\n                  <ListItemIcon>\n                    <LogoutIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Logout\" />\n                </ListItem>\n              </List>\n            </div>\n          </Drawer>\n        </Fab>\n      </Flex>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  player: state.player,\n  display: state.display,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  changePage: (page) => push(`/${page}`),\n  togglePlayerDrawer: display.togglePlayerDrawer,\n}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NavBar);\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { notify } from '../actions';\n\nconst styles = (theme) => ({\n  close: {\n    width: theme.spacing.unit * 4,\n    height: theme.spacing.unit * 4,\n  },\n});\n\nclass SnackBar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      open: false,\n      messageInfo: {},\n      queue: [],\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.notifications.length > 0) {\n      this.setState({ queue: this.state.queue.concat(nextProps.notifications) }, () => {\n        this.props.notificationClear();\n        if (this.state.open) {\n          // immediately begin dismissing current message\n          // to start showing new one\n          this.setState({ open: false });\n        } else {\n          this.processQueue();\n        }\n      });\n    }\n  }\n\n  processQueue = () => {\n    if (this.state.queue.length > 0) {\n      this.setState({\n        messageInfo: this.state.queue[0],\n        open: true,\n        queue: this.state.queue.length > 1 ? this.state.queue.slice(1) : [],\n      });\n    }\n  };\n\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ open: false });\n  };\n\n  handleAction = (action) => {\n    switch (action) {\n      case 'challenge.view':\n        return this.props.changePage('challenges');\n      case 'game.view':\n        return this.props.changePage('games');\n      case 'leaderboard.view':\n        return this.props.changePage('leaderboard');\n      default:\n        return true;\n    }\n  };\n\n  handleExited = () => {\n    this.processQueue();\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { text, action, actionText } = this.state.messageInfo;\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.open}\n          autoHideDuration={3000}\n          onClose={this.handleClose}\n          onExited={this.handleExited}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{text}</span>}\n          action={[\n            <Button key=\"goTo\" color=\"secondary\" size=\"small\" onClick={() => this.handleAction(action)}>\n              {actionText || ''}\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={this.handleClose}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  notifications: state.notifications.generic,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  notificationClear: notify.clear,\n  changePage: (page) => push(`/${page}`),\n}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(SnackBar));\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Slide from '@material-ui/core/Slide';\n\nimport { display, game } from '../actions';\n\nconst StyledSpinner = styled(CircularProgress)`\n  margin: auto !important;\n  margin-top: 5vh !important;\n`;\n\nconst StyledDialogContent = styled(DialogContent)`\n    display: flex !important;\n    flex-direction: column !important;\n    justify-content: center !important;\n    align-items: center !important;\n`;\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass PlayDialog extends React.Component {\n  findPlayer = (id) => this.props.leaderboard.find((player) => id === player._id);\n\n  accept = (id) => {\n    this.props.accept({ id });\n  };\n\n  reject = (id) => {\n    this.props.reject({ id });\n    this.props.togglePlayDialog();\n  };\n\n  won = (id) => {\n    this.props.won({ id });\n  };\n\n  lost = (id) => {\n    this.props.lost({ id });\n  };\n\n  confirm = (id) => {\n    this.props.confirm({ id });\n    this.props.togglePlayDialog();\n  };\n\n  contest = (id) => {\n    this.props.contest({ id });\n    this.props.togglePlayDialog();\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.display.playDialog}\n        TransitionComponent={Transition}\n        keepMounted\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        {\n          this.props.playing._id && !this.props.playing.inProgress\n          && (\n          <div>\n            <DialogTitle id=\"alert-dialog-slide-title\">\n              {`${this.props.playing.challenger === this.props.player.id\n                ? this.findPlayer(this.props.playing.opponent).username\n                : this.findPlayer(this.props.playing.challenger).username} would like to start your game`}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-slide-description\">\n                click one of the options below to accept or reject the commencement of the game\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={() => this.accept(this.props.playing._id)} color=\"primary\">\n                Accept\n              </Button>\n              <Button onClick={() => this.reject(this.props.playing._id)} color=\"primary\">\n                Reject\n              </Button>\n            </DialogActions>\n          </div>\n          )\n        }\n        {\n          this.props.playing.waitingForPlayer\n            && (\n            <div>\n              <DialogTitle id=\"alert-dialog-slide-title\">\n                Waiting for opponent to accept...\n              </DialogTitle>\n              <StyledDialogContent>\n                <StyledSpinner />\n              </StyledDialogContent>\n              <DialogActions>\n                <Button onClick={this.props.togglePlayDialog} color=\"primary\">\n                  Cancel\n                </Button>\n              </DialogActions>\n            </div>\n            )\n        }\n        {\n          this.props.playing.inProgress && !this.props.playing.winner\n          && (\n          <div>\n            <DialogTitle id=\"alert-dialog-slide-title\">\n              Game In Progress\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-slide-description\">\n                Once the game is finished, click on your outcome below\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={() => this.won(this.props.playing._id)} color=\"primary\">\n                I Won\n              </Button>\n              <Button onClick={() => this.lost(this.props.playing._id)} color=\"primary\">\n                I Lost\n              </Button>\n            </DialogActions>\n          </div>\n          )\n        }\n        {\n          this.props.playing.inProgress && this.props.playing.winner && this.props.playing.waitingForConfirmationFrom === this.props.player.id\n          && (\n          <div>\n            <DialogTitle id=\"alert-dialog-slide-title\">\n              {`${this.props.playing.challenger === this.props.player.id\n                ? this.findPlayer(this.props.playing.opponent).username\n                : this.findPlayer(this.props.playing.challenger).username} has declared ${this.props.playing.winner === this.props.player.id ? 'you' : 'themself'} the winner`}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-slide-description\">\n                You can either confirm or contest this decision. Contesting will nullify any ranking changes the outcome of this match would have had so only contest as a last resort!\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={() => this.contest(this.props.playing._id)} color=\"secondary\">\n                Contest\n              </Button>\n              <Button onClick={() => this.confirm(this.props.playing._id)} color=\"primary\">\n                Confirm\n              </Button>\n            </DialogActions>\n          </div>\n          )\n        }\n        {\n          this.props.playing.inProgress && this.props.playing.winner && this.props.playing.waitingForConfirmationFrom !== this.props.player.id\n          && (\n          <div>\n            <DialogTitle id=\"alert-dialog-slide-title\">\n              waiting for opponent to confirm result\n            </DialogTitle>\n            <StyledDialogContent>\n              <DialogContentText id=\"alert-dialog-slide-description\">\n                If your opponent contests the result it will nullify any ranking changes the outcome of this match would have had so don't try to cheat!\n              </DialogContentText>\n              <StyledSpinner />\n            </StyledDialogContent>\n          </div>\n          )\n        }\n      </Dialog>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  display: state.display,\n  playing: state.playing,\n  player: state.player,\n  leaderboard: state.leaderboard,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  togglePlayDialog: display.togglePlayDialog,\n  accept: game.accept,\n  reject: game.reject,\n  won: game.win,\n  lost: game.lose,\n  confirm: game.confirm,\n  contest: game.contest,\n}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PlayDialog);\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { push } from 'connected-react-router';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport constants from './constants';\n\nimport Home from './containers/home';\nimport LoggedOut from './containers/loggedOut';\nimport Challenges from './containers/challenges';\nimport Games from './containers/games';\n\nimport NavBar from './components/navBar';\nimport SnackBar from './components/snackBar';\nimport PlayDialog from './components/playDialog';\n\nconst loggedInOnlyPaths = [\n  'leaderboard',\n  'challenges',\n  'games',\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!!nextProps.player.id !== prevState.loggedIn) {\n      if (!prevState.loggedIn && !loggedInOnlyPaths.find((path) => nextProps.location.pathname.includes(path))) {\n        nextProps.loggedIn();\n      }\n      if (!nextProps.player.id) {\n        nextProps.loggedOut();\n        return { loggedIn: false };\n      }\n      return { loggedIn: !prevState.loggedIn };\n    } if (Object.keys(nextProps.player).length > 0) {\n      return { loggedIn: true };\n    }\n    return prevState;\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      if (!this.props.player.id\n        && this.props.location\n        && this.props.location.pathname !== '/logged-out') {\n        this.props.loggedOut();\n        location.reload(); // eslint-disable-line\n      }\n    }, 600);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.loggedIn ? <div><NavBar /></div> : null}\n        <Switch>\n          <Route exact path=\"/leaderboard\" component={Home} />\n          <Route exact path=\"/logged-out\" component={LoggedOut} />\n          <Route exact path=\"/challenges\" component={Challenges} />\n          <Route exact path=\"/games\" component={Games} />\n          <Route path=\"/login\" component={() => { window.location = `//${constants.serverUrl}/auth/google`; }} />\n          <Route path=\"/logout\" component={() => { window.location = `//${constants.serverUrl}/logout`; }} />\n        </Switch>\n        <PlayDialog />\n        <SnackBar />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  game: state.game,\n  player: state.player,\n  location: state.router.location,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  loggedOut: () => push('/logged-out'),\n  loggedIn: () => push('/leaderboard'),\n}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport store, { history } from './store';\nimport App from './App';\n\nimport './index.css';\n\nconst target = document.querySelector('#root');\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <App />\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  target,\n);\n"],"sourceRoot":""}